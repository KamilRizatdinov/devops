name: Main workflow

on:
  push:
    branches:
      - "main"

env:
  working-directory: ./python_app
  docker-tag: rizatdinov/python_app

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Fetch repository
        uses: actions/checkout@main

      - name: Set up python3.7
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Cache python dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-python-dependencies
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('requirements.txt.development') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install workflow dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade-strategy eager -r requirements.txt.development
        working-directory: ${{env.working-directory}}

      - name: Run tests
        run: pytest
        working-directory: ${{env.working-directory}}

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action
        with:
          images: ${{ env.docker-tag }}

      - name: Build and push Docker image
        uses: docker/build-push-action
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
